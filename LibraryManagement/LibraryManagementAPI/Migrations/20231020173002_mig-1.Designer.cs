// <auto-generated />
using System;
using LibraryManagementAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LibraryManagementAPI.Migrations
{
    [DbContext(typeof(LibraryManagementDbContext))]
    [Migration("20231020173002_mig-1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LibraryManagementAPI.Models.Domain.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d0be27e1-4515-4f81-a919-b1204ef58b10"),
                            Name = "Ray Bradbury"
                        },
                        new
                        {
                            Id = new Guid("03ed0716-89d8-4267-9fa1-44271ffd3339"),
                            Name = "Aldous Huxley"
                        },
                        new
                        {
                            Id = new Guid("87a25f21-2190-4c16-bb39-86fbd6da0de6"),
                            Name = "Mary Shelley"
                        });
                });

            modelBuilder.Entity("LibraryManagementAPI.Models.Domain.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<bool>("CheckedOut")
                        .HasColumnType("boolean");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            AuthorId = new Guid("d0be27e1-4515-4f81-a919-b1204ef58b10"),
                            CheckedOut = false,
                            ISBN = "0451524934",
                            Title = "Fahrenheit 451"
                        },
                        new
                        {
                            Id = new Guid("6b29fc40-ca47-1067-b31d-00dd010662da"),
                            AuthorId = new Guid("d0be27e1-4515-4f81-a919-b1204ef58b10"),
                            CheckedOut = false,
                            ISBN = "0735619670",
                            Title = "The Halloween Tree"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440000"),
                            AuthorId = new Guid("03ed0716-89d8-4267-9fa1-44271ffd3339"),
                            CheckedOut = false,
                            ISBN = "0735619444",
                            Title = "Brave New World"
                        },
                        new
                        {
                            Id = new Guid("0e344965-9852-4c8b-a0b0-4f1e2c8fd8e3"),
                            AuthorId = new Guid("03ed0716-89d8-4267-9fa1-44271ffd3339"),
                            CheckedOut = false,
                            ISBN = "0731234570",
                            Title = "The Art of Seeing"
                        },
                        new
                        {
                            Id = new Guid("1eb2c51f-4b19-4a95-9bbf-90cb6a23d218"),
                            AuthorId = new Guid("87a25f21-2190-4c16-bb39-86fbd6da0de6"),
                            CheckedOut = false,
                            ISBN = "0735619688",
                            Title = "Frankenstein"
                        });
                });

            modelBuilder.Entity("LibraryManagementAPI.Models.Domain.Book", b =>
                {
                    b.HasOne("LibraryManagementAPI.Models.Domain.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("LibraryManagementAPI.Models.Domain.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
